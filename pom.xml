<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>test</groupId>
  <artifactId>test-dependency</artifactId>
  <version>0.0.11</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <github.global.server>github</github.global.server>
    </properties>
    <scm>
    	<!-- 
    	   Used by maven release plugin.  Add -Dgithub.site.repositoryOwner=yourGithubUserId to 
    	   maven release commands, e.g., 
    	   -Dgithub.site.repositoryOwner=sjdayday release:prepare (or release:perform) 
    	 -->
        <developerConnection>scm:git:git@github.com:${github.site.repositoryOwner}/test-dependency.git</developerConnection>
        <tag>test-dependency--0.0.11</tag>
    </scm>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>



    </dependencies>


    <build>
        <pluginManagement>
            <plugins>
               <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.0</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.7</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>target/generated-sources</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
        <plugins>
        	<!-- package everything in one single jar: mvn clean package assembly:assembly -->
      		<plugin>
        		<artifactId>maven-assembly-plugin</artifactId>
        		<configuration>
		          <descriptorRefs>
        		    <descriptorRef>jar-with-dependencies</descriptorRef>
		          </descriptorRefs>
        		  <archive>
		            <manifest>
        		      <mainClass>um.ac.imperial.pipe.runner.PetriNetRunner</mainClass>
		            </manifest>
        		  </archive>
		        </configuration>
      		</plugin>
      		

            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
       	    	<!-- 
		    	   Used by maven release plugin, and as part of deploy phase.  
		    	   Add -Dgithub.site.repositoryOwner=yourGithubUserId to maven commands, e.g., 
			    	   -Dgithub.site.repositoryOwner=sjdayday release:prepare (or release:perform, or deploy) 
	        	 -->
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <configuration>
                    <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                    <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <branch>refs/heads/mvn-repo</branch>
                    <includes><include>**/*</include></includes>
                    <repositoryName>test-dependency</repositoryName>
<!--                     <repositoryOwner>${githubUser}</repositoryOwner>   
 -->                    <merge>true</merge>
                </configuration>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
               <!-- this version and maven-scm-provider-gitexe 1.8.1 correctly 
               generate a release jar rather than a SNAPSHOT jar, but 
               do not correctly distinguish branch and tag by the same name
               so force an extra "-" in the tagNameFormat to keep them unique
               later versions of the two plugins (e.g., 2.5.3 and 1.9.4) 
               distinguish them via refs/heads/xxx and refs/tags/xxx but don't 
               yet fix the original problem of generating a SNAPSHOT jar.  -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.2</version>
                  <configuration>
          			<tagNameFormat>@{project.artifactId}--@{project.version}</tagNameFormat>
        		  </configuration>
			      <dependencies>
			        <dependency>
			          <groupId>org.apache.maven.scm</groupId>
			          <artifactId>maven-scm-provider-gitexe</artifactId>
			          <version>1.8.1</version>
			        </dependency>
			       </dependencies>
            </plugin>
        </plugins>
    </build>


<!--   <build>
    <sourceDirectory>src</sourceDirectory>
  </build>
 -->
</project>
